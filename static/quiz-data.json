[
    {
        "question": "What is the primary focus of Chapter 2 in the textbook?",
        "correct_answer": "Objects and Classes",
        "options": [
            "Objects and Classes",
            "Arrays and Lists",
            "Data Structures",
            "Algorithms and Complexity"
        ],
        "explanation": "Chapter 2 of the textbook primarily focuses on \"Objects and Classes,\" as indicated in the table of contents provided. This chapter discusses the foundational concepts of object-oriented programming, including the structure and behavior of objects and the use of classes to define them."
    },
    {
        "question": "What is the purpose of a constructor in a class?",
        "correct_answer": "To initialize the object's fields when an object is created",
        "options": [
            "To initialize the object's fields when an object is created",
            "To destroy an object when it is no longer needed",
            "To define the behavior of an object",
            "To create a copy of an existing object"
        ],
        "explanation": "A constructor is a special method in a class that is called when an object is instantiated. Its purpose is to initialize the object's fields with default or specified values."
    },
    {
        "question": "What is inheritance in object-oriented programming?",
        "correct_answer": "A mechanism where a new class can inherit properties and methods from an existing class",
        "options": [
            "A mechanism where a new class can inherit properties and methods from an existing class",
            "A way to hide data within a class",
            "A process of converting objects to primitive data types",
            "A method to store multiple values in a single variable"
        ],
        "explanation": "Inheritance allows a new class to inherit the properties and methods of an existing class, enabling code reuse and the creation of hierarchical class structures."
    },
    {
        "question": "What is the term used for a class that provides a blueprint for creating objects?",
        "correct_answer": "Class",
        "options": [
            "Class",
            "Object",
            "Method",
            "Interface"
        ],
        "explanation": "A class in object-oriented programming serves as a blueprint for creating objects. It defines the properties (fields) and behaviors (methods) that the objects created from it can have."
    },
    {
        "question": "Which of the following is NOT a component of a class?",
        "correct_answer": "Algorithm",
        "options": [
            "Algorithm",
            "Field",
            "Constructor",
            "Method"
        ],
        "explanation": "A class typically consists of fields, constructors, and methods. An algorithm, while it can be implemented within a method, is not a direct component of a class."
    },
    {
        "question": "What is the role of methods within a class?",
        "correct_answer": "To define the behavior of objects created from the class",
        "options": [
            "To define the behavior of objects created from the class",
            "To store data within an object",
            "To initialize object fields",
            "To create new classes"
        ],
        "explanation": "Methods within a class define the behavior of the objects created from that class. They are functions that operate on the data contained within the object."
    },
    {
        "question": "In object-oriented programming, what term describes the ability to hide the internal details of an object?",
        "correct_answer": "Encapsulation",
        "options": [
            "Encapsulation",
            "Inheritance",
            "Polymorphism",
            "Abstraction"
        ],
        "explanation": "Encapsulation is the concept of hiding the internal details of an object and only exposing necessary components. This is achieved by using access modifiers and defining public interfaces."
    },
    {
        "question": "What keyword is used to create a new object in Java?",
        "correct_answer": "new",
        "options": [
            "new",
            "create",
            "object",
            "instance"
        ],
        "explanation": "In Java, the keyword \"new\" is used to create a new instance of an object. It allocates memory for the object and calls the constructor."
    },
    {
        "question": "What is the difference between a field and a method in a class?",
        "correct_answer": "A field is a variable that holds data, while a method defines behavior.",
        "options": [
            "A field is a variable that holds data, while a method defines behavior.",
            "A field defines behavior, while a method holds data.",
            "Both are used to initialize an object.",
            "There is no difference; they are synonyms."
        ],
        "explanation": "A field is a variable within a class that holds data, while a method is a function within a class that defines the behavior of the objects created from that class."
    },
    {
        "question": "Which of the following best describes a case study in programming?",
        "correct_answer": "An in-depth exploration of a practical example to illustrate concepts",
        "options": [
            "An in-depth exploration of a practical example to illustrate concepts",
            "A theoretical explanation of programming paradigms",
            "A list of programming languages",
            "A glossary of technical terms"
        ],
        "explanation": "A case study in programming involves an in-depth exploration of a practical example to demonstrate and illustrate programming concepts effectively."
    }
]